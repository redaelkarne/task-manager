var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.773,1,1.125]],["body/components/AppComponent.html",[0,1.097,1,1.737,2,1.767,3,0.438,4,0.438,5,1.424,6,1.424,7,1.424,8,0.374,9,1.952,10,1.094,11,2.526,12,2.811,13,2.772,14,3.424,15,2.772,16,2.344,17,3.982,18,2.023,19,3.424,20,3.424,21,3.424,22,0.438,23,1.212,24,3.224,25,0.438,26,0.047,27,1.65,28,1.244,29,1.094,30,0.833,31,3.511,32,0.582,33,2.41,34,0.721,35,0.664,36,1.424,37,0.438,38,0.374,39,1.094,40,2.023,41,2.023,42,0.853,43,2.562,44,1.424,45,0.962,46,1.424,47,0.853,48,1.244,49,2.023,50,0.853,51,0.754,52,1.424,53,1.244,54,0.754,55,1.244,56,1.424,57,0.029,58,0.029]],["title/injectables/CRUDTaskListService.html",[59,1.659,60,1.922]],["body/injectables/CRUDTaskListService.html",[3,0.34,4,0.34,8,0.29,13,1.513,22,0.624,23,1.005,25,0.697,26,0.048,28,0.964,29,0.848,30,0.953,32,1.049,34,0.807,35,0.514,37,0.34,38,0.29,45,0.829,57,0.024,58,0.024,59,1.677,60,1.943,61,1.868,62,3.09,63,1.513,64,2.78,65,1.947,66,1.005,67,2.299,68,2.299,69,3.105,70,2.299,71,1.772,72,2.839,73,2.299,74,1.868,75,1.376,76,1.376,77,1.358,78,1.972,79,2.299,80,2.78,81,1.868,82,2.299,83,1.868,84,2.299,85,1.868,86,2.78,87,1.289,88,1.279,89,1.104,90,1.279,91,1.465,92,1.513,93,1.513,94,1.868,95,0.848,96,1.868,97,1.279,98,1.868,99,1.868,100,1.868,101,1.513,102,1.513,103,1.868,104,1.279,105,1.868,106,1.279,107,1.868,108,1.868,109,1.868,110,1.868]],["title/pipes/DateFormatPipe.html",[111,1.659,112,1.449]],["body/pipes/DateFormatPipe.html",[3,0.51,4,0.51,8,0.436,10,1.274,25,0.51,26,0.048,27,3.312,29,1.274,32,0.678,34,0.591,35,0.773,37,0.51,38,0.436,45,1.043,57,0.033,58,0.033,66,0.994,75,1.125,76,1.125,77,0.994,87,1.274,95,1.274,101,2.273,104,3.169,111,2.249,112,1.964,113,2.807,114,3.082,115,2.273,116,3.082,117,2.807,118,3.806,119,2.736,120,2.807,121,3.806,122,2.807,123,3.806,124,2.807,125,3.082,126,3.806,127,2.807,128,2.807,129,3.806,130,2.807]],["title/interfaces/IByStatutTaskListService.html",[131,1.449,132,1.922]],["body/interfaces/IByStatutTaskListService.html",[3,0.574,4,0.574,8,0.49,22,0.574,25,0.574,26,0.047,30,0.833,32,0.763,34,0.964,37,0.574,45,0.763,57,0.035,58,0.035,65,1.835,66,1.457,75,1.265,76,1.265,77,1.118,88,2.161,89,1.866,90,2.161,91,1.63,92,2.557,93,2.557,131,1.63,132,2.817,133,2.161,134,3.333,135,2.161,136,4.116,137,4.116,138,1.944,139,2.557,140,3.158]],["title/interfaces/ICRUDTaskListService.html",[91,1.449,131,1.449]],["body/interfaces/ICRUDTaskListService.html",[3,0.465,4,0.465,8,0.397,22,0.465,25,0.748,26,0.047,30,0.976,32,1.075,34,0.751,37,0.465,45,0.993,57,0.031,58,0.031,62,3.204,65,1.648,66,1.264,67,2.89,68,2.89,69,3.603,70,2.89,73,2.89,75,1.648,76,1.648,77,1.576,78,2.201,79,2.89,80,3.329,82,2.07,84,2.89,86,2.07,88,1.75,89,1.511,90,1.75,91,1.842,131,1.32,133,1.75,135,1.75,139,2.07,141,2.557,142,2.557,143,2.557]],["title/components/MainTaskComponent.html",[0,0.773,47,0.994]],["body/components/MainTaskComponent.html",[0,1.002,1,0.824,2,1.575,3,0.374,4,0.374,5,1.215,6,1.215,7,1.215,8,0.319,10,0.934,11,2.406,12,2.661,18,1.803,22,0.374,23,1.08,25,0.374,26,0.046,30,0.929,32,0.737,34,0.766,35,0.566,37,0.374,38,0.319,39,0.934,40,1.803,41,1.803,42,0.728,43,2.378,44,1.215,45,0.879,46,1.215,47,1.425,48,2.569,49,1.803,50,1.08,51,0.643,52,1.215,53,1.062,54,0.643,55,1.062,56,1.215,57,0.026,58,0.026,66,1.08,77,0.728,78,1.385,87,0.934,95,1.385,138,0.824,144,1.408,145,2.946,146,2.49,147,1.666,148,2.15,149,2.089,150,2.946,151,2.471,152,2.378,153,2.057,154,2.057,155,1.408,156,1.666,157,1.666,158,2.057,159,2.057,160,2.057,161,1.666,162,2.057,163,2.057,164,2.471,165,2.057,166,2.057,167,2.057,168,2.057,169,2.057,170,1.408,171,3.051]],["title/classes/Task.html",[30,0.511,38,0.436]],["body/classes/Task.html",[3,0.449,4,0.449,8,0.383,22,0.449,23,1.232,24,3.547,25,0.84,26,0.047,27,3.444,28,1.273,29,1.12,30,0.633,32,1.116,37,0.633,38,0.383,45,0.596,57,0.03,58,0.03,71,1.797,75,0.988,76,0.988,87,1.58,119,2.833,138,1.851,172,1.688,173,1.688,174,5.293,175,4.619,176,3.741,177,4.619,178,2.467,179,2.467,180,2.467,181,2.467,182,2.467,183,2.467,184,2.467,185,2.818,186,2.818,187,2.818]],["title/components/TaskComponent.html",[0,0.773,50,0.994]],["body/components/TaskComponent.html",[0,0.989,1,0.806,2,1.549,3,0.366,4,0.366,5,1.188,6,1.188,7,1.188,8,0.312,10,0.913,11,2.389,12,2.639,18,1.773,22,0.366,25,0.366,26,0.048,30,0.9,32,0.867,34,0.632,35,0.554,37,0.366,38,0.312,39,0.913,40,1.773,41,1.773,42,0.712,43,2.352,44,1.188,45,0.867,46,1.188,47,0.712,48,1.038,49,1.773,50,1.409,51,0.629,52,1.188,53,1.038,54,0.629,55,1.038,56,1.188,57,0.026,58,0.026,66,1.062,71,1.853,77,0.712,78,1.362,95,1.362,116,2.43,119,1.773,138,0.806,144,1.376,148,2.121,149,2.054,150,2.907,151,2.43,152,2.352,155,1.376,157,1.628,188,1.628,189,2.43,190,3.001,191,2.011,192,2.43,193,2.011,194,1.628,195,3.001,196,3.001,197,2.43,198,3.001,199,3.001,200,3.001]],["title/classes/TaskList.html",[38,0.436,65,1.125]],["body/classes/TaskList.html",[3,0.583,4,0.583,8,0.498,22,0.583,23,1.472,25,0.756,26,0.047,30,0.942,32,1.004,34,0.675,37,0.583,38,0.498,45,0.774,57,0.036,58,0.036,65,1.666,71,1.655,75,1.285,76,1.285,97,3.461,172,2.194,201,3.735,202,2.596,203,4.156,204,4.156,205,3.206,206,3.206]],["title/components/TaskListComponent.html",[0,0.773,51,0.878]],["body/components/TaskListComponent.html",[0,0.976,1,0.788,2,1.524,3,0.358,4,0.358,5,1.162,6,1.162,7,1.162,8,0.305,10,0.893,11,2.371,12,2.617,18,1.744,22,0.358,23,1.045,25,0.358,26,0.047,30,0.879,32,0.713,34,0.746,35,0.542,37,0.358,38,0.305,39,0.893,40,1.744,41,1.744,42,0.697,43,2.326,44,1.162,45,0.856,46,1.162,47,0.697,48,1.015,49,1.744,50,0.697,51,1.231,52,2.093,53,1.015,54,0.615,55,1.015,56,1.162,57,0.025,58,0.025,65,1.893,66,1.045,77,0.697,78,1.34,87,1.787,89,1.162,95,1.34,102,2.39,106,2.02,138,0.788,144,1.346,148,2.093,149,2.02,152,2.326,155,1.346,170,1.346,176,2.869,194,1.593,197,2.869,207,2.869,208,2.093,209,1.593,210,3.542,211,2.951,212,1.967,213,1.967,214,1.967,215,3.542,216,3.542,217,3.542,218,1.593,219,2.39,220,2.951,221,1.593,222,1.967]],["title/directives/TaskStatusColorDirective.html",[42,0.994,54,0.878]],["body/directives/TaskStatusColorDirective.html",[3,0.421,4,0.421,8,0.359,10,1.05,11,1.716,22,0.421,25,0.605,26,0.048,28,1.194,32,1.028,34,0.7,35,0.637,37,0.421,38,0.359,42,1.177,45,0.559,53,1.194,54,1.04,55,2.327,57,0.028,58,0.028,64,3.152,66,1.177,71,1.194,75,0.927,76,0.927,77,1.177,78,1.509,95,1.509,138,1.559,148,2.3,152,2.514,170,1.583,189,2.692,192,2.692,218,1.873,221,1.873,223,3.65,224,3.085,225,1.873,226,4.255,227,2.313,228,4.255,229,3.324,230,3.324,231,2.313,232,2.313,233,2.313,234,2.313,235,2.313,236,2.313,237,2.313,238,3.892,239,4.255,240,2.313,241,3.892,242,2.313,243,2.313,244,2.313]],["title/modules/TasksModule.html",[245,1.659,246,1.659]],["body/modules/TasksModule.html",[1,0.864,3,0.392,4,0.392,8,0.335,16,2.162,26,0.048,30,0.574,34,1.059,35,0.594,36,1.273,37,0.392,38,0.335,39,0.978,47,1.552,48,1.112,50,1.675,51,1.479,54,1.37,57,0.027,58,0.027,97,1.475,112,2.262,119,1.273,146,1.475,156,1.745,208,1.273,224,1.475,245,1.273,246,3.212,247,1.112,248,1.273,249,3.027,250,1.273,251,1.475,252,1.475,253,1.745,254,1.745,255,1.745,256,2.364,257,2.557,258,1.745,259,1.745,260,2.155,261,2.557,262,3.158,263,1.745,264,2.155,265,1.745,266,2.155,267,2.155,268,2.155,269,2.155,270,1.745,271,2.155]],["title/modules/TasksRoutingModule.html",[245,1.659,256,1.449]],["body/modules/TasksRoutingModule.html",[0,0.901,3,0.595,4,0.595,8,0.508,16,2.24,26,0.048,30,0.595,34,0.98,35,0.901,36,1.934,37,0.595,38,0.508,51,1.317,57,0.036,58,0.036,104,2.24,208,1.934,247,1.689,252,2.24,256,2.174,261,3.411,265,2.65,270,3.411,272,3.272,273,3.272,274,4.658,275,3.272,276,3.272]],["title/coverage.html",[277,3.083]],["body/coverage.html",[0,1.202,1,0.981,8,0.38,9,1.982,25,0.445,26,0.047,30,0.794,38,0.537,42,0.867,47,0.867,50,0.867,51,0.765,54,0.765,57,0.03,58,0.03,59,1.446,60,1.675,62,2.369,63,1.982,65,0.981,87,1.111,91,1.263,111,1.446,112,1.263,114,1.982,115,1.982,125,4.372,131,1.787,132,1.675,134,1.982,135,2.369,145,1.982,146,1.675,147,1.982,173,1.675,188,1.982,201,1.982,202,1.982,207,1.982,208,1.446,209,1.982,223,1.982,224,1.675,225,1.982,250,1.446,277,1.982,278,2.448,279,2.448,280,2.448,281,3.461,282,2.803,283,4.365,284,1.982,285,4.606,286,1.982,287,1.982,288,1.982,289,4.016,290,2.448,291,3.461,292,2.448,293,1.982,294,2.448,295,2.448,296,2.448]],["title/dependencies.html",[248,1.991,297,1.614]],["body/dependencies.html",[26,0.048,35,0.892,36,1.914,57,0.036,58,0.036,248,1.914,263,2.623,298,3.239,299,5.413,300,3.239,301,3.239,302,4.635,303,3.388,304,3.239,305,3.239,306,3.239,307,2.623,308,3.239,309,3.239,310,3.239,311,3.239,312,3.239,313,3.239,314,3.239,315,3.239,316,3.239,317,3.239]],["title/miscellaneous/enumerations.html",[318,1.393,319,2.729]],["body/miscellaneous/enumerations.html",[22,0.7,26,0.046,29,2.277,57,0.04,58,0.04,138,1.869,173,2.636,185,3.776,186,3.776,187,3.776,318,2.276,319,3.119,320,3.851]],["title/index.html",[22,0.429,321,2.357,322,2.357]],["body/index.html",[26,0.039,31,3.027,57,0.039,58,0.039,161,3.027,164,3.027,297,2.558,307,3.027,323,3.737,324,3.737,325,3.737,326,3.737,327,4.579,328,3.027,329,3.737,330,3.737,331,3.737,332,3.737,333,3.737,334,3.737,335,3.737,336,3.737,337,3.737,338,3.737,339,3.737,340,3.737]],["title/modules.html",[247,1.965]],["body/modules.html",[26,0.041,57,0.041,58,0.041,246,2.408,247,2.104,256,2.104,303,3.3,341,4.075,342,4.075,343,4.824,344,4.075,345,4.075]],["title/overview.html",[346,3.083]],["body/overview.html",[2,1.482,26,0.046,39,1.303,42,1.016,47,1.547,50,1.654,51,1.461,54,1.366,57,0.033,58,0.033,59,1.696,106,2.99,111,1.696,112,2.255,133,1.965,172,1.965,219,3.537,245,1.696,246,3.297,247,1.482,248,1.696,249,2.325,250,1.696,251,1.965,252,1.965,253,2.325,254,2.325,255,2.325,256,2.255,257,3.129,258,2.325,259,2.325,346,2.325,347,2.871]],["title/properties.html",[23,1.193,297,1.614]],["body/properties.html",[23,1.501,26,0.045,57,0.042,58,0.042,328,3.433,348,4.24]],["title/miscellaneous/variables.html",[318,1.393,349,2.729]],["body/miscellaneous/variables.html",[15,2.532,22,0.569,25,0.744,26,0.048,28,2.495,29,2.194,57,0.035,58,0.035,250,2.416,251,2.799,282,2.532,284,3.69,286,3.69,287,2.532,288,3.311,293,2.532,318,1.848,349,2.532,350,3.126,351,3.126,352,4.089,353,4.089,354,3.126,355,3.126,356,3.126,357,3.126,358,3.126,359,3.126,360,3.126]]],"invertedIndex":[["",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"injectables/CRUDTaskListService.html":{},"pipes/DateFormatPipe.html":{},"interfaces/IByStatutTaskListService.html":{},"interfaces/ICRUDTaskListService.html":{},"components/MainTaskComponent.html":{},"classes/Task.html":{},"components/TaskComponent.html":{},"classes/TaskList.html":{},"components/TaskListComponent.html":{},"directives/TaskStatusColorDirective.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":125,"title":{},"body":{"pipes/DateFormatPipe.html":{},"coverage.html":{}}}],["0.0.0",{"_index":348,"title":{},"body":{"properties.html":{}}}],["0.14.10",{"_index":317,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":285,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":281,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":289,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":294,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":291,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":290,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":292,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":106,"title":{},"body":{"injectables/CRUDTaskListService.html":{},"components/TaskListComponent.html":{},"overview.html":{}}}],["1).padstart(2",{"_index":128,"title":{},"body":{"pipes/DateFormatPipe.html":{}}}],["1.1.25",{"_index":309,"title":{},"body":{"dependencies.html":{}}}],["10.7.0",{"_index":333,"title":{},"body":{"index.html":{}}}],["18.2.0",{"_index":299,"title":{},"body":{"dependencies.html":{}}}],["18.2.2",{"_index":307,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["2",{"_index":219,"title":{},"body":{"components/TaskListComponent.html":{},"overview.html":{}}}],["2.3.0",{"_index":315,"title":{},"body":{"dependencies.html":{}}}],["20.15.1",{"_index":331,"title":{},"body":{"index.html":{}}}],["3",{"_index":220,"title":{},"body":{"components/TaskListComponent.html":{}}}],["4",{"_index":347,"title":{},"body":{"overview.html":{}}}],["4.18.2",{"_index":311,"title":{},"body":{"dependencies.html":{}}}],["7.8.0",{"_index":313,"title":{},"body":{"dependencies.html":{}}}],["a_faire",{"_index":186,"title":{},"body":{"classes/Task.html":{},"miscellaneous/enumerations.html":{}}}],["actual_component",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/MainTaskComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{}}}],["added",{"_index":98,"title":{},"body":{"injectables/CRUDTaskListService.html":{}}}],["addtask",{"_index":67,"title":{},"body":{"injectables/CRUDTaskListService.html":{},"interfaces/ICRUDTaskListService.html":{}}}],["addtask(task",{"_index":73,"title":{},"body":{"injectables/CRUDTaskListService.html":{},"interfaces/ICRUDTaskListService.html":{}}}],["angular",{"_index":161,"title":{},"body":{"components/MainTaskComponent.html":{},"index.html":{}}}],["angular/animations",{"_index":298,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":263,"title":{},"body":{"modules/TasksModule.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":300,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"injectables/CRUDTaskListService.html":{},"pipes/DateFormatPipe.html":{},"components/MainTaskComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{},"directives/TaskStatusColorDirective.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":301,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":302,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"dependencies.html":{}}}],["angular/ssr",{"_index":306,"title":{},"body":{"dependencies.html":{}}}],["app",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/MainTaskComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{}}}],["app.component.css",{"_index":21,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":19,"title":{},"body":{"components/AppComponent.html":{}}}],["app/app.component",{"_index":266,"title":{},"body":{"modules/TasksModule.html":{}}}],["app/model/task",{"_index":214,"title":{},"body":{"components/TaskListComponent.html":{}}}],["app/model/task.model",{"_index":155,"title":{},"body":{"components/MainTaskComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/MainTaskComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{},"modules/TasksModule.html":{},"coverage.html":{}}}],["appconfig",{"_index":288,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["application",{"_index":339,"title":{},"body":{"index.html":{}}}],["applicationconfig",{"_index":353,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apptaskstatuscolor",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/MainTaskComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{},"directives/TaskStatusColorDirective.html":{}}}],["available",{"_index":345,"title":{},"body":{"modules.html":{}}}],["black",{"_index":244,"title":{},"body":{"directives/TaskStatusColorDirective.html":{}}}],["blue",{"_index":240,"title":{},"body":{"directives/TaskStatusColorDirective.html":{}}}],["bootstrap",{"_index":250,"title":{},"body":{"modules/TasksModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["bootstrapapplication(appcomponent",{"_index":358,"title":{},"body":{"miscellaneous/variables.html":{}}}],["break",{"_index":241,"title":{},"body":{"directives/TaskStatusColorDirective.html":{}}}],["browse",{"_index":343,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":303,"title":{},"body":{"dependencies.html":{},"modules.html":{}}}],["bugs",{"_index":169,"title":{},"body":{"components/MainTaskComponent.html":{}}}],["case",{"_index":238,"title":{},"body":{"directives/TaskStatusColorDirective.html":{}}}],["class",{"_index":38,"title":{"classes/Task.html":{},"classes/TaskList.html":{}},"body":{"components/AppComponent.html":{},"injectables/CRUDTaskListService.html":{},"pipes/DateFormatPipe.html":{},"components/MainTaskComponent.html":{},"classes/Task.html":{},"components/TaskComponent.html":{},"classes/TaskList.html":{},"components/TaskListComponent.html":{},"directives/TaskStatusColorDirective.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"coverage.html":{}}}],["classes",{"_index":172,"title":{},"body":{"classes/Task.html":{},"classes/TaskList.html":{},"overview.html":{}}}],["cli",{"_index":329,"title":{},"body":{"index.html":{}}}],["cluster_tasksmodule",{"_index":253,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["cluster_tasksmodule_declarations",{"_index":254,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["cluster_tasksmodule_imports",{"_index":255,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["color.directive",{"_index":267,"title":{},"body":{"modules/TasksModule.html":{}}}],["color.directive.ts",{"_index":225,"title":{},"body":{"directives/TaskStatusColorDirective.html":{},"coverage.html":{}}}],["color.directive.ts:13",{"_index":231,"title":{},"body":{"directives/TaskStatusColorDirective.html":{}}}],["color.directive.ts:17",{"_index":232,"title":{},"body":{"directives/TaskStatusColorDirective.html":{}}}],["color.directive.ts:9",{"_index":229,"title":{},"body":{"directives/TaskStatusColorDirective.html":{}}}],["commonmodule",{"_index":262,"title":{},"body":{"modules/TasksModule.html":{}}}],["compodoc/compodoc",{"_index":308,"title":{},"body":{"dependencies.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/MainTaskComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/MainTaskComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{},"modules/TasksRoutingModule.html":{},"coverage.html":{}}}],["component_template",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/MainTaskComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/MainTaskComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{},"overview.html":{}}}],["config",{"_index":284,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["console.log('taskcomponent",{"_index":193,"title":{},"body":{"components/TaskComponent.html":{}}}],["console.log('tasklistcomponent",{"_index":222,"title":{},"body":{"components/TaskListComponent.html":{}}}],["const",{"_index":104,"title":{},"body":{"injectables/CRUDTaskListService.html":{},"pipes/DateFormatPipe.html":{},"modules/TasksRoutingModule.html":{}}}],["constructor",{"_index":71,"title":{},"body":{"injectables/CRUDTaskListService.html":{},"classes/Task.html":{},"components/TaskComponent.html":{},"classes/TaskList.html":{},"directives/TaskStatusColorDirective.html":{}}}],["constructor(el",{"_index":227,"title":{},"body":{"directives/TaskStatusColorDirective.html":{}}}],["constructor(private",{"_index":234,"title":{},"body":{"directives/TaskStatusColorDirective.html":{}}}],["constructor(tasks",{"_index":203,"title":{},"body":{"classes/TaskList.html":{}}}],["constructor(title",{"_index":178,"title":{},"body":{"classes/Task.html":{}}}],["corriger",{"_index":168,"title":{},"body":{"components/MainTaskComponent.html":{}}}],["coverage",{"_index":277,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createdat",{"_index":175,"title":{},"body":{"classes/Task.html":{}}}],["crud",{"_index":92,"title":{},"body":{"injectables/CRUDTaskListService.html":{},"interfaces/IByStatutTaskListService.html":{}}}],["crudtasklistservice",{"_index":60,"title":{"injectables/CRUDTaskListService.html":{}},"body":{"injectables/CRUDTaskListService.html":{},"coverage.html":{}}}],["création",{"_index":198,"title":{},"body":{"components/TaskComponent.html":{}}}],["date",{"_index":119,"title":{},"body":{"pipes/DateFormatPipe.html":{},"classes/Task.html":{},"components/TaskComponent.html":{},"modules/TasksModule.html":{}}}],["date(value",{"_index":122,"title":{},"body":{"pipes/DateFormatPipe.html":{}}}],["date.getfullyear",{"_index":130,"title":{},"body":{"pipes/DateFormatPipe.html":{}}}],["dateformat",{"_index":116,"title":{},"body":{"pipes/DateFormatPipe.html":{},"components/TaskComponent.html":{}}}],["dateformatpipe",{"_index":112,"title":{"pipes/DateFormatPipe.html":{}},"body":{"pipes/DateFormatPipe.html":{},"modules/TasksModule.html":{},"coverage.html":{},"overview.html":{}}}],["day",{"_index":123,"title":{},"body":{"pipes/DateFormatPipe.html":{}}}],["de",{"_index":197,"title":{},"body":{"components/TaskComponent.html":{},"components/TaskListComponent.html":{}}}],["declarations",{"_index":249,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["default",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"injectables/CRUDTaskListService.html":{},"classes/Task.html":{},"directives/TaskStatusColorDirective.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"injectables/CRUDTaskListService.html":{},"pipes/DateFormatPipe.html":{},"interfaces/IByStatutTaskListService.html":{},"interfaces/ICRUDTaskListService.html":{},"components/MainTaskComponent.html":{},"classes/Task.html":{},"components/TaskComponent.html":{},"classes/TaskList.html":{},"components/TaskListComponent.html":{},"directives/TaskStatusColorDirective.html":{}}}],["deletetask",{"_index":68,"title":{},"body":{"injectables/CRUDTaskListService.html":{},"interfaces/ICRUDTaskListService.html":{}}}],["deletetask(taskid",{"_index":79,"title":{},"body":{"injectables/CRUDTaskListService.html":{},"interfaces/ICRUDTaskListService.html":{}}}],["dependencies",{"_index":248,"title":{"dependencies.html":{}},"body":{"modules/TasksModule.html":{},"dependencies.html":{},"overview.html":{}}}],["des",{"_index":324,"title":{},"body":{"index.html":{}}}],["description",{"_index":176,"title":{},"body":{"classes/Task.html":{},"components/TaskListComponent.html":{}}}],["directive",{"_index":42,"title":{"directives/TaskStatusColorDirective.html":{}},"body":{"components/AppComponent.html":{},"components/MainTaskComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{},"directives/TaskStatusColorDirective.html":{},"coverage.html":{},"overview.html":{}}}],["directives",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/MainTaskComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{},"directives/TaskStatusColorDirective.html":{}}}],["documentation",{"_index":278,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/MainTaskComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{}}}],["dynamic",{"_index":304,"title":{},"body":{"dependencies.html":{}}}],["el",{"_index":230,"title":{},"body":{"directives/TaskStatusColorDirective.html":{}}}],["element",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/MainTaskComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{}}}],["elementref",{"_index":228,"title":{},"body":{"directives/TaskStatusColorDirective.html":{}}}],["en_cours",{"_index":185,"title":{},"body":{"classes/Task.html":{},"miscellaneous/enumerations.html":{}}}],["enum",{"_index":184,"title":{},"body":{"classes/Task.html":{}}}],["enumerations",{"_index":319,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["et",{"_index":167,"title":{},"body":{"components/MainTaskComponent.html":{}}}],["eventcoalescing",{"_index":355,"title":{},"body":{"miscellaneous/variables.html":{}}}],["export",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"injectables/CRUDTaskListService.html":{},"pipes/DateFormatPipe.html":{},"interfaces/IByStatutTaskListService.html":{},"interfaces/ICRUDTaskListService.html":{},"components/MainTaskComponent.html":{},"classes/Task.html":{},"components/TaskComponent.html":{},"classes/TaskList.html":{},"components/TaskListComponent.html":{},"directives/TaskStatusColorDirective.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{}}}],["exports",{"_index":252,"title":{},"body":{"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"overview.html":{}}}],["express",{"_index":310,"title":{},"body":{"dependencies.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"injectables/CRUDTaskListService.html":{},"pipes/DateFormatPipe.html":{},"interfaces/IByStatutTaskListService.html":{},"interfaces/ICRUDTaskListService.html":{},"components/MainTaskComponent.html":{},"classes/Task.html":{},"components/TaskComponent.html":{},"classes/TaskList.html":{},"components/TaskListComponent.html":{},"directives/TaskStatusColorDirective.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"coverage.html":{}}}],["fonctionnalités",{"_index":165,"title":{},"body":{"components/MainTaskComponent.html":{}}}],["format.pipe",{"_index":268,"title":{},"body":{"modules/TasksModule.html":{}}}],["format.pipe.ts",{"_index":115,"title":{},"body":{"pipes/DateFormatPipe.html":{},"coverage.html":{}}}],["format.pipe.ts:8",{"_index":120,"title":{},"body":{"pipes/DateFormatPipe.html":{}}}],["getalltasks",{"_index":69,"title":{},"body":{"injectables/CRUDTaskListService.html":{},"interfaces/ICRUDTaskListService.html":{}}}],["gettasksbystatut",{"_index":136,"title":{},"body":{"interfaces/IByStatutTaskListService.html":{}}}],["gettasksbystatut(stat",{"_index":137,"title":{},"body":{"interfaces/IByStatutTaskListService.html":{}}}],["getting",{"_index":321,"title":{"index.html":{}},"body":{}}],["graph",{"_index":344,"title":{},"body":{"modules.html":{}}}],["green",{"_index":243,"title":{},"body":{"directives/TaskStatusColorDirective.html":{}}}],["here",{"_index":99,"title":{},"body":{"injectables/CRUDTaskListService.html":{}}}],["html",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/MainTaskComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{}}}],["ibystatuttasklistservice",{"_index":132,"title":{"interfaces/IByStatutTaskListService.html":{}},"body":{"interfaces/IByStatutTaskListService.html":{},"coverage.html":{}}}],["icrudtasklistservice",{"_index":91,"title":{"interfaces/ICRUDTaskListService.html":{}},"body":{"injectables/CRUDTaskListService.html":{},"interfaces/IByStatutTaskListService.html":{},"interfaces/ICRUDTaskListService.html":{},"coverage.html":{}}}],["identifier",{"_index":279,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":95,"title":{},"body":{"injectables/CRUDTaskListService.html":{},"pipes/DateFormatPipe.html":{},"components/MainTaskComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{},"directives/TaskStatusColorDirective.html":{}}}],["implémenter",{"_index":162,"title":{},"body":{"components/MainTaskComponent.html":{}}}],["import",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"injectables/CRUDTaskListService.html":{},"pipes/DateFormatPipe.html":{},"interfaces/IByStatutTaskListService.html":{},"interfaces/ICRUDTaskListService.html":{},"components/MainTaskComponent.html":{},"components/TaskComponent.html":{},"classes/TaskList.html":{},"components/TaskListComponent.html":{},"directives/TaskStatusColorDirective.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{}}}],["imports",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{}}}],["index",{"_index":22,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"injectables/CRUDTaskListService.html":{},"interfaces/IByStatutTaskListService.html":{},"interfaces/ICRUDTaskListService.html":{},"components/MainTaskComponent.html":{},"classes/Task.html":{},"components/TaskComponent.html":{},"classes/TaskList.html":{},"components/TaskListComponent.html":{},"directives/TaskStatusColorDirective.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"injectables/CRUDTaskListService.html":{},"pipes/DateFormatPipe.html":{},"interfaces/IByStatutTaskListService.html":{},"interfaces/ICRUDTaskListService.html":{},"components/MainTaskComponent.html":{},"classes/Task.html":{},"components/TaskComponent.html":{},"classes/TaskList.html":{},"components/TaskListComponent.html":{},"directives/TaskStatusColorDirective.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{}}}],["initial",{"_index":96,"title":{},"body":{"injectables/CRUDTaskListService.html":{}}}],["initialized",{"_index":194,"title":{},"body":{"components/TaskComponent.html":{},"components/TaskListComponent.html":{}}}],["injectable",{"_index":59,"title":{"injectables/CRUDTaskListService.html":{}},"body":{"injectables/CRUDTaskListService.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":61,"title":{},"body":{"injectables/CRUDTaskListService.html":{}}}],["input",{"_index":192,"title":{},"body":{"components/TaskComponent.html":{},"directives/TaskStatusColorDirective.html":{}}}],["inputs",{"_index":189,"title":{},"body":{"components/TaskComponent.html":{},"directives/TaskStatusColorDirective.html":{}}}],["interface",{"_index":131,"title":{"interfaces/IByStatutTaskListService.html":{},"interfaces/ICRUDTaskListService.html":{}},"body":{"interfaces/IByStatutTaskListService.html":{},"interfaces/ICRUDTaskListService.html":{},"coverage.html":{}}}],["interfaces",{"_index":133,"title":{},"body":{"interfaces/IByStatutTaskListService.html":{},"interfaces/ICRUDTaskListService.html":{},"overview.html":{}}}],["la",{"_index":216,"title":{},"body":{"components/TaskListComponent.html":{}}}],["lancer",{"_index":337,"title":{},"body":{"index.html":{}}}],["le",{"_index":159,"title":{},"body":{"components/MainTaskComponent.html":{}}}],["legend",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/MainTaskComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["les",{"_index":164,"title":{},"body":{"components/MainTaskComponent.html":{},"index.html":{}}}],["list",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/MainTaskComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{}}}],["list.component",{"_index":265,"title":{},"body":{"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{}}}],["list.component.css",{"_index":210,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.component.html",{"_index":211,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.component.ts",{"_index":209,"title":{},"body":{"components/TaskListComponent.html":{},"coverage.html":{}}}],["list.component.ts:14",{"_index":213,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.component.ts:16",{"_index":212,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.model",{"_index":89,"title":{},"body":{"injectables/CRUDTaskListService.html":{},"interfaces/IByStatutTaskListService.html":{},"interfaces/ICRUDTaskListService.html":{},"components/TaskListComponent.html":{}}}],["list.model.ts",{"_index":202,"title":{},"body":{"classes/TaskList.html":{},"coverage.html":{}}}],["list.model.ts:4",{"_index":204,"title":{},"body":{"classes/TaskList.html":{}}}],["list.service.interface",{"_index":93,"title":{},"body":{"injectables/CRUDTaskListService.html":{},"interfaces/IByStatutTaskListService.html":{}}}],["list.service.interface.ts",{"_index":135,"title":{},"body":{"interfaces/IByStatutTaskListService.html":{},"interfaces/ICRUDTaskListService.html":{},"coverage.html":{}}}],["list.service.interface.ts:6",{"_index":142,"title":{},"body":{"interfaces/ICRUDTaskListService.html":{}}}],["list.service.interface.ts:7",{"_index":139,"title":{},"body":{"interfaces/IByStatutTaskListService.html":{},"interfaces/ICRUDTaskListService.html":{}}}],["list.service.interface.ts:8",{"_index":143,"title":{},"body":{"interfaces/ICRUDTaskListService.html":{}}}],["list.service.interface.ts:9",{"_index":141,"title":{},"body":{"interfaces/ICRUDTaskListService.html":{}}}],["list.service.ts",{"_index":63,"title":{},"body":{"injectables/CRUDTaskListService.html":{},"coverage.html":{}}}],["list.service.ts:11",{"_index":72,"title":{},"body":{"injectables/CRUDTaskListService.html":{}}}],["list.service.ts:17",{"_index":83,"title":{},"body":{"injectables/CRUDTaskListService.html":{}}}],["list.service.ts:21",{"_index":74,"title":{},"body":{"injectables/CRUDTaskListService.html":{}}}],["list.service.ts:25",{"_index":85,"title":{},"body":{"injectables/CRUDTaskListService.html":{}}}],["list.service.ts:32",{"_index":81,"title":{},"body":{"injectables/CRUDTaskListService.html":{}}}],["list/task",{"_index":208,"title":{},"body":{"components/TaskListComponent.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"coverage.html":{}}}],["main",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/MainTaskComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{},"modules/TasksModule.html":{}}}],["maintaskcomponent",{"_index":47,"title":{"components/MainTaskComponent.html":{}},"body":{"components/AppComponent.html":{},"components/MainTaskComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{},"modules/TasksModule.html":{},"coverage.html":{},"overview.html":{}}}],["manager",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["matching",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"injectables/CRUDTaskListService.html":{},"pipes/DateFormatPipe.html":{},"interfaces/IByStatutTaskListService.html":{},"interfaces/ICRUDTaskListService.html":{},"components/MainTaskComponent.html":{},"classes/Task.html":{},"components/TaskComponent.html":{},"classes/TaskList.html":{},"components/TaskListComponent.html":{},"directives/TaskStatusColorDirective.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["mergeapplicationconfig(appconfig",{"_index":359,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metadata",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"pipes/DateFormatPipe.html":{},"components/MainTaskComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{},"directives/TaskStatusColorDirective.html":{}}}],["methods",{"_index":66,"title":{},"body":{"injectables/CRUDTaskListService.html":{},"pipes/DateFormatPipe.html":{},"interfaces/IByStatutTaskListService.html":{},"interfaces/ICRUDTaskListService.html":{},"components/MainTaskComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{},"directives/TaskStatusColorDirective.html":{}}}],["miscellaneous",{"_index":318,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["model/task",{"_index":88,"title":{},"body":{"injectables/CRUDTaskListService.html":{},"interfaces/IByStatutTaskListService.html":{},"interfaces/ICRUDTaskListService.html":{}}}],["model/task.model",{"_index":90,"title":{},"body":{"injectables/CRUDTaskListService.html":{},"interfaces/IByStatutTaskListService.html":{},"interfaces/ICRUDTaskListService.html":{}}}],["module",{"_index":245,"title":{"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{}},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["modules",{"_index":247,"title":{"modules.html":{}},"body":{"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["month",{"_index":126,"title":{},"body":{"pipes/DateFormatPipe.html":{}}}],["name",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"injectables/CRUDTaskListService.html":{},"pipes/DateFormatPipe.html":{},"interfaces/IByStatutTaskListService.html":{},"interfaces/ICRUDTaskListService.html":{},"components/MainTaskComponent.html":{},"classes/Task.html":{},"components/TaskComponent.html":{},"classes/TaskList.html":{},"components/TaskListComponent.html":{},"directives/TaskStatusColorDirective.html":{}}}],["necessary",{"_index":100,"title":{},"body":{"injectables/CRUDTaskListService.html":{}}}],["new",{"_index":87,"title":{},"body":{"injectables/CRUDTaskListService.html":{},"pipes/DateFormatPipe.html":{},"components/MainTaskComponent.html":{},"classes/Task.html":{},"components/TaskListComponent.html":{},"coverage.html":{}}}],["ng",{"_index":327,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":261,"title":{},"body":{"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{}}}],["ngoninit",{"_index":152,"title":{},"body":{"components/MainTaskComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{},"directives/TaskStatusColorDirective.html":{}}}],["node",{"_index":330,"title":{},"body":{"index.html":{}}}],["npm",{"_index":332,"title":{},"body":{"index.html":{}}}],["number",{"_index":80,"title":{},"body":{"injectables/CRUDTaskListService.html":{},"interfaces/ICRUDTaskListService.html":{}}}],["nécessaires",{"_index":166,"title":{},"body":{"components/MainTaskComponent.html":{}}}],["oninit",{"_index":148,"title":{},"body":{"components/MainTaskComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{},"directives/TaskStatusColorDirective.html":{}}}],["optional",{"_index":76,"title":{},"body":{"injectables/CRUDTaskListService.html":{},"pipes/DateFormatPipe.html":{},"interfaces/IByStatutTaskListService.html":{},"interfaces/ICRUDTaskListService.html":{},"classes/Task.html":{},"classes/TaskList.html":{},"directives/TaskStatusColorDirective.html":{}}}],["os",{"_index":334,"title":{},"body":{"index.html":{}}}],["out",{"_index":259,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["outils",{"_index":325,"title":{},"body":{"index.html":{}}}],["overview",{"_index":346,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":297,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["parameters",{"_index":75,"title":{},"body":{"injectables/CRUDTaskListService.html":{},"pipes/DateFormatPipe.html":{},"interfaces/IByStatutTaskListService.html":{},"interfaces/ICRUDTaskListService.html":{},"classes/Task.html":{},"classes/TaskList.html":{},"directives/TaskStatusColorDirective.html":{}}}],["path",{"_index":275,"title":{},"body":{"modules/TasksRoutingModule.html":{}}}],["pipe",{"_index":111,"title":{"pipes/DateFormatPipe.html":{}},"body":{"pipes/DateFormatPipe.html":{},"coverage.html":{},"overview.html":{}}}],["pipes",{"_index":113,"title":{},"body":{"pipes/DateFormatPipe.html":{}}}],["pipetransform",{"_index":121,"title":{},"body":{"pipes/DateFormatPipe.html":{}}}],["private",{"_index":64,"title":{},"body":{"injectables/CRUDTaskListService.html":{},"directives/TaskStatusColorDirective.html":{}}}],["projet",{"_index":160,"title":{},"body":{"components/MainTaskComponent.html":{}}}],["properties",{"_index":23,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"injectables/CRUDTaskListService.html":{},"components/MainTaskComponent.html":{},"classes/Task.html":{},"classes/TaskList.html":{},"components/TaskListComponent.html":{},"properties.html":{}}}],["provideclienthydration",{"_index":357,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providedin",{"_index":94,"title":{},"body":{"injectables/CRUDTaskListService.html":{}}}],["providerouter(routes",{"_index":356,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":251,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["provideserverrendering",{"_index":360,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providezonechangedetection",{"_index":354,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":174,"title":{},"body":{"classes/Task.html":{}}}],["red",{"_index":242,"title":{},"body":{"directives/TaskStatusColorDirective.html":{}}}],["reset",{"_index":258,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["results",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"injectables/CRUDTaskListService.html":{},"pipes/DateFormatPipe.html":{},"interfaces/IByStatutTaskListService.html":{},"interfaces/ICRUDTaskListService.html":{},"components/MainTaskComponent.html":{},"classes/Task.html":{},"components/TaskComponent.html":{},"classes/TaskList.html":{},"components/TaskListComponent.html":{},"directives/TaskStatusColorDirective.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":101,"title":{},"body":{"injectables/CRUDTaskListService.html":{},"pipes/DateFormatPipe.html":{}}}],["returns",{"_index":77,"title":{},"body":{"injectables/CRUDTaskListService.html":{},"pipes/DateFormatPipe.html":{},"interfaces/IByStatutTaskListService.html":{},"interfaces/ICRUDTaskListService.html":{},"components/MainTaskComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{},"directives/TaskStatusColorDirective.html":{}}}],["root",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"injectables/CRUDTaskListService.html":{}}}],["root'},{'name",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/MainTaskComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{}}}],["routermodule",{"_index":270,"title":{},"body":{"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":276,"title":{},"body":{"modules/TasksRoutingModule.html":{}}}],["routeroutlet",{"_index":17,"title":{},"body":{"components/AppComponent.html":{}}}],["routes",{"_index":274,"title":{},"body":{"modules/TasksRoutingModule.html":{}}}],["routing.module",{"_index":264,"title":{},"body":{"modules/TasksModule.html":{}}}],["routing.module.ts",{"_index":273,"title":{},"body":{"modules/TasksRoutingModule.html":{}}}],["rxjs",{"_index":312,"title":{},"body":{"dependencies.html":{}}}],["selector",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/MainTaskComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{},"directives/TaskStatusColorDirective.html":{}}}],["serve",{"_index":340,"title":{},"body":{"index.html":{}}}],["server",{"_index":305,"title":{},"body":{"dependencies.html":{}}}],["serverconfig",{"_index":286,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"injectables/CRUDTaskListService.html":{},"pipes/DateFormatPipe.html":{},"interfaces/IByStatutTaskListService.html":{},"interfaces/ICRUDTaskListService.html":{},"components/MainTaskComponent.html":{},"classes/Task.html":{},"components/TaskComponent.html":{},"classes/TaskList.html":{},"components/TaskListComponent.html":{},"directives/TaskStatusColorDirective.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{}}}],["src/.../app.config.server.ts",{"_index":352,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.config.ts",{"_index":350,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.server.ts",{"_index":351,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../task.model.ts",{"_index":320,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/app.component.ts",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:13",{"_index":33,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.server.ts",{"_index":282,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.config.ts",{"_index":287,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/model/task",{"_index":201,"title":{},"body":{"classes/TaskList.html":{},"coverage.html":{}}}],["src/app/model/task.model",{"_index":233,"title":{},"body":{"directives/TaskStatusColorDirective.html":{}}}],["src/app/model/task.model.ts",{"_index":173,"title":{},"body":{"classes/Task.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/model/task.model.ts:10",{"_index":181,"title":{},"body":{"classes/Task.html":{}}}],["src/app/model/task.model.ts:11",{"_index":182,"title":{},"body":{"classes/Task.html":{}}}],["src/app/model/task.model.ts:12",{"_index":180,"title":{},"body":{"classes/Task.html":{}}}],["src/app/model/task.model.ts:7",{"_index":179,"title":{},"body":{"classes/Task.html":{}}}],["src/app/model/task.model.ts:9",{"_index":183,"title":{},"body":{"classes/Task.html":{}}}],["src/app/service/bystatut",{"_index":134,"title":{},"body":{"interfaces/IByStatutTaskListService.html":{},"coverage.html":{}}}],["src/app/service/crud",{"_index":62,"title":{},"body":{"injectables/CRUDTaskListService.html":{},"interfaces/ICRUDTaskListService.html":{},"coverage.html":{}}}],["src/date",{"_index":114,"title":{},"body":{"pipes/DateFormatPipe.html":{},"coverage.html":{}}}],["src/main.server.ts",{"_index":293,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/task",{"_index":223,"title":{},"body":{"directives/TaskStatusColorDirective.html":{},"coverage.html":{}}}],["src/tasks/main",{"_index":145,"title":{},"body":{"components/MainTaskComponent.html":{},"coverage.html":{}}}],["src/tasks/task",{"_index":207,"title":{},"body":{"components/TaskListComponent.html":{},"coverage.html":{}}}],["src/tasks/task/task.component.ts",{"_index":188,"title":{},"body":{"components/TaskComponent.html":{},"coverage.html":{}}}],["src/tasks/task/task.component.ts:12",{"_index":190,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/tasks/task/task.component.ts:16",{"_index":191,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/tasks/tasks",{"_index":272,"title":{},"body":{"modules/TasksRoutingModule.html":{}}}],["src/tasks/tasks.module.ts",{"_index":260,"title":{},"body":{"modules/TasksModule.html":{}}}],["standalone",{"_index":14,"title":{},"body":{"components/AppComponent.html":{}}}],["started",{"_index":322,"title":{"index.html":{}},"body":{}}],["stat",{"_index":140,"title":{},"body":{"interfaces/IByStatutTaskListService.html":{}}}],["state",{"_index":177,"title":{},"body":{"classes/Task.html":{}}}],["statements",{"_index":280,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":224,"title":{},"body":{"directives/TaskStatusColorDirective.html":{},"modules/TasksModule.html":{},"coverage.html":{}}}],["string",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"pipes/DateFormatPipe.html":{},"classes/Task.html":{}}}],["string(date.getdate()).padstart(2",{"_index":124,"title":{},"body":{"pipes/DateFormatPipe.html":{}}}],["string(date.getmonth",{"_index":127,"title":{},"body":{"pipes/DateFormatPipe.html":{}}}],["styles",{"_index":144,"title":{},"body":{"components/MainTaskComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{}}}],["styleurl",{"_index":20,"title":{},"body":{"components/AppComponent.html":{}}}],["styleurls",{"_index":149,"title":{},"body":{"components/MainTaskComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{}}}],["support",{"_index":341,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":342,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":236,"title":{},"body":{"directives/TaskStatusColorDirective.html":{}}}],["table",{"_index":296,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":295,"title":{},"body":{"coverage.html":{}}}],["task",{"_index":30,"title":{"classes/Task.html":{}},"body":{"components/AppComponent.html":{},"injectables/CRUDTaskListService.html":{},"interfaces/IByStatutTaskListService.html":{},"interfaces/ICRUDTaskListService.html":{},"components/MainTaskComponent.html":{},"classes/Task.html":{},"components/TaskComponent.html":{},"classes/TaskList.html":{},"components/TaskListComponent.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"coverage.html":{}}}],["task'},{'name",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/MainTaskComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{}}}],["task('tâche",{"_index":215,"title":{},"body":{"components/TaskListComponent.html":{}}}],["task.component",{"_index":269,"title":{},"body":{"modules/TasksModule.html":{}}}],["task.component.css",{"_index":150,"title":{},"body":{"components/MainTaskComponent.html":{},"components/TaskComponent.html":{}}}],["task.component.html",{"_index":151,"title":{},"body":{"components/MainTaskComponent.html":{},"components/TaskComponent.html":{}}}],["task.component.ts",{"_index":147,"title":{},"body":{"components/MainTaskComponent.html":{},"coverage.html":{}}}],["task.component.ts:12",{"_index":154,"title":{},"body":{"components/MainTaskComponent.html":{}}}],["task.component.ts:16",{"_index":153,"title":{},"body":{"components/MainTaskComponent.html":{}}}],["task.createdat",{"_index":199,"title":{},"body":{"components/TaskComponent.html":{}}}],["task.description",{"_index":196,"title":{},"body":{"components/TaskComponent.html":{}}}],["task.id",{"_index":110,"title":{},"body":{"injectables/CRUDTaskListService.html":{}}}],["task.model",{"_index":205,"title":{},"body":{"classes/TaskList.html":{}}}],["task.state",{"_index":200,"title":{},"body":{"components/TaskComponent.html":{}}}],["task.title",{"_index":195,"title":{},"body":{"components/TaskComponent.html":{}}}],["task/main",{"_index":146,"title":{},"body":{"components/MainTaskComponent.html":{},"modules/TasksModule.html":{},"coverage.html":{}}}],["task/task.component",{"_index":156,"title":{},"body":{"components/MainTaskComponent.html":{},"modules/TasksModule.html":{}}}],["taskcomponent",{"_index":50,"title":{"components/TaskComponent.html":{}},"body":{"components/AppComponent.html":{},"components/MainTaskComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{},"modules/TasksModule.html":{},"coverage.html":{},"overview.html":{}}}],["taskid",{"_index":82,"title":{},"body":{"injectables/CRUDTaskListService.html":{},"interfaces/ICRUDTaskListService.html":{}}}],["tasklist",{"_index":65,"title":{"classes/TaskList.html":{}},"body":{"injectables/CRUDTaskListService.html":{},"interfaces/IByStatutTaskListService.html":{},"interfaces/ICRUDTaskListService.html":{},"classes/TaskList.html":{},"components/TaskListComponent.html":{},"coverage.html":{}}}],["tasklistcomponent",{"_index":51,"title":{"components/TaskListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/MainTaskComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"coverage.html":{},"overview.html":{}}}],["tasklistcomponent,taskcomponent,tasklistcomponent,taskcomponent,taskstatuscolordirective,dateformatpipe,maintaskcomponent",{"_index":271,"title":{},"body":{"modules/TasksModule.html":{}}}],["tasks",{"_index":97,"title":{},"body":{"injectables/CRUDTaskListService.html":{},"classes/TaskList.html":{},"modules/TasksModule.html":{}}}],["tasksmodule",{"_index":246,"title":{"modules/TasksModule.html":{}},"body":{"modules/TasksModule.html":{},"modules.html":{},"overview.html":{}}}],["tasksroutingmodule",{"_index":256,"title":{"modules/TasksRoutingModule.html":{}},"body":{"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["taskstate",{"_index":138,"title":{},"body":{"interfaces/IByStatutTaskListService.html":{},"components/MainTaskComponent.html":{},"classes/Task.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{},"directives/TaskStatusColorDirective.html":{},"miscellaneous/enumerations.html":{}}}],["taskstate.a_faire",{"_index":218,"title":{},"body":{"components/TaskListComponent.html":{},"directives/TaskStatusColorDirective.html":{}}}],["taskstate.en_cours",{"_index":170,"title":{},"body":{"components/MainTaskComponent.html":{},"components/TaskListComponent.html":{},"directives/TaskStatusColorDirective.html":{}}}],["taskstate.terminee",{"_index":221,"title":{},"body":{"components/TaskListComponent.html":{},"directives/TaskStatusColorDirective.html":{}}}],["taskstatuscolordirective",{"_index":54,"title":{"directives/TaskStatusColorDirective.html":{}},"body":{"components/AppComponent.html":{},"components/MainTaskComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{},"directives/TaskStatusColorDirective.html":{},"modules/TasksModule.html":{},"coverage.html":{},"overview.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/MainTaskComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{}}}],["templateurl",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"components/MainTaskComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{}}}],["terminee",{"_index":187,"title":{},"body":{"classes/Task.html":{},"miscellaneous/enumerations.html":{}}}],["terminer",{"_index":158,"title":{},"body":{"components/MainTaskComponent.html":{}}}],["this.apptaskstatuscolor",{"_index":237,"title":{},"body":{"directives/TaskStatusColorDirective.html":{}}}],["this.el.nativeelement.style.color",{"_index":239,"title":{},"body":{"directives/TaskStatusColorDirective.html":{}}}],["this.task",{"_index":157,"title":{},"body":{"components/MainTaskComponent.html":{},"components/TaskComponent.html":{}}}],["this.tasklist",{"_index":102,"title":{},"body":{"injectables/CRUDTaskListService.html":{},"components/TaskListComponent.html":{}}}],["this.tasklist.tasks",{"_index":108,"title":{},"body":{"injectables/CRUDTaskListService.html":{}}}],["this.tasklist.tasks.filter(task",{"_index":109,"title":{},"body":{"injectables/CRUDTaskListService.html":{}}}],["this.tasklist.tasks.findindex(task",{"_index":105,"title":{},"body":{"injectables/CRUDTaskListService.html":{}}}],["this.tasklist.tasks.push(task",{"_index":103,"title":{},"body":{"injectables/CRUDTaskListService.html":{}}}],["this.tasklist.tasks[index",{"_index":107,"title":{},"body":{"injectables/CRUDTaskListService.html":{}}}],["this.tasks",{"_index":206,"title":{},"body":{"classes/TaskList.html":{}}}],["this.updatecolor",{"_index":235,"title":{},"body":{"directives/TaskStatusColorDirective.html":{}}}],["title",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"classes/Task.html":{}}}],["toutes",{"_index":163,"title":{},"body":{"components/MainTaskComponent.html":{}}}],["transform",{"_index":117,"title":{},"body":{"pipes/DateFormatPipe.html":{}}}],["transform(value",{"_index":118,"title":{},"body":{"pipes/DateFormatPipe.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/MainTaskComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{}}}],["true",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":314,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"injectables/CRUDTaskListService.html":{},"pipes/DateFormatPipe.html":{},"interfaces/IByStatutTaskListService.html":{},"interfaces/ICRUDTaskListService.html":{},"components/MainTaskComponent.html":{},"classes/Task.html":{},"components/TaskComponent.html":{},"classes/TaskList.html":{},"components/TaskListComponent.html":{},"directives/TaskStatusColorDirective.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tâche",{"_index":217,"title":{},"body":{"components/TaskListComponent.html":{}}}],["updatecolor",{"_index":226,"title":{},"body":{"directives/TaskStatusColorDirective.html":{}}}],["updatedtask",{"_index":86,"title":{},"body":{"injectables/CRUDTaskListService.html":{},"interfaces/ICRUDTaskListService.html":{}}}],["updatetask",{"_index":70,"title":{},"body":{"injectables/CRUDTaskListService.html":{},"interfaces/ICRUDTaskListService.html":{}}}],["updatetask(updatedtask",{"_index":84,"title":{},"body":{"injectables/CRUDTaskListService.html":{},"interfaces/ICRUDTaskListService.html":{}}}],["utilisés",{"_index":326,"title":{},"body":{"index.html":{}}}],["value",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"injectables/CRUDTaskListService.html":{},"pipes/DateFormatPipe.html":{},"classes/Task.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/MainTaskComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{}}}],["variable",{"_index":283,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":349,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":328,"title":{},"body":{"index.html":{},"properties.html":{}}}],["versions",{"_index":323,"title":{},"body":{"index.html":{}}}],["void",{"_index":78,"title":{},"body":{"injectables/CRUDTaskListService.html":{},"interfaces/ICRUDTaskListService.html":{},"components/MainTaskComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{},"directives/TaskStatusColorDirective.html":{}}}],["votre",{"_index":338,"title":{},"body":{"index.html":{}}}],["win32",{"_index":335,"title":{},"body":{"index.html":{}}}],["works",{"_index":171,"title":{},"body":{"components/MainTaskComponent.html":{}}}],["x64",{"_index":336,"title":{},"body":{"index.html":{}}}],["year",{"_index":129,"title":{},"body":{"pipes/DateFormatPipe.html":{}}}],["zone.js",{"_index":316,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":257,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterOutlet\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'task-manager'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\n\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [RouterOutlet],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.css'\n})\nexport class AppComponent {\n  title = 'task-manager';\n}\n\n    \n\n    \n        \nTask Manager\n\n\n\n>\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Task Manager>'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'MainTaskComponent', 'selector': 'app-main-task'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TaskListComponent', 'selector': 'app-task-list'}];\n    var DIRECTIVES = [{'name': 'TaskStatusColorDirective', 'selector': '[appTaskStatusColor]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CRUDTaskListService.html":{"url":"injectables/CRUDTaskListService.html","title":"injectable - CRUDTaskListService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CRUDTaskListService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/crud-task-list.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                taskList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTask\n                            \n                            \n                                deleteTask\n                            \n                            \n                                getAllTasks\n                            \n                            \n                                updateTask\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/service/crud-task-list.service.ts:11\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addTask\n                        \n                    \n                \n            \n            \n                \naddTask(task: Task)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/crud-task-list.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                task\n                                            \n                                                            Task\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteTask\n                        \n                    \n                \n            \n            \n                \ndeleteTask(taskId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/crud-task-list.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                taskId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllTasks\n                        \n                    \n                \n            \n            \n                \ngetAllTasks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/crud-task-list.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         TaskList\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateTask\n                        \n                    \n                \n            \n            \n                \nupdateTask(updatedTask: Task)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/crud-task-list.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updatedTask\n                                            \n                                                            Task\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        taskList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TaskList\n\n                    \n                \n                \n                    \n                        Default value : new TaskList([])\n                    \n                \n                    \n                        \n                                Defined in src/app/service/crud-task-list.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { TaskList } from '../model/task-list.model';\nimport { Task } from '../model/task.model';\nimport { ICRUDTaskListService } from './crud-task-list.service.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CRUDTaskListService implements ICRUDTaskListService {\n  private taskList: TaskList = new TaskList([]);\n\n  constructor() {\n    // Initial tasks can be added here if necessary\n  }\n\n  getAllTasks(): TaskList {\n    return this.taskList;\n  }\n\n  addTask(task: Task): void {\n    this.taskList.tasks.push(task);\n  }\n\n  updateTask(updatedTask: Task): void {\n    const index = this.taskList.tasks.findIndex(task => task === updatedTask);\n    if (index !== -1) {\n      this.taskList.tasks[index] = updatedTask;\n    }\n  }\n\n  deleteTask(taskId: number): void {\n    this.taskList.tasks = this.taskList.tasks.filter(task => task.id !== taskId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/DateFormatPipe.html":{"url":"pipes/DateFormatPipe.html","title":"pipe - DateFormatPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  DateFormatPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/date-format.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        dateFormat\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: Date | string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/date-format.pipe.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        Date | string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'dateFormat',\n})\nexport class DateFormatPipe implements PipeTransform {\n\n  transform(value: Date | string): string {\n    const date = new Date(value);\n    const day = String(date.getDate()).padStart(2, '0');\n    const month = String(date.getMonth() + 1).padStart(2, '0');\n    const year = date.getFullYear();\n\n    return `${day}-${month}-${year}`;\n  }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IByStatutTaskListService.html":{"url":"interfaces/IByStatutTaskListService.html","title":"interface - IByStatutTaskListService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IByStatutTaskListService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/bystatut-task-list.service.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getTasksByStatut\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getTasksByStatut\n                        \n                    \n                \n            \n            \n                \ngetTasksByStatut(stat: TaskState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/bystatut-task-list.service.interface.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                stat\n                                            \n                                                            TaskState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         TaskList\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { TaskList } from '../model/task-list.model';\nimport { TaskState } from '../model/task.model';\nimport { ICRUDTaskListService } from './crud-task-list.service.interface';\n\nexport interface IByStatutTaskListService {\n  getTasksByStatut(stat: TaskState): TaskList;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICRUDTaskListService.html":{"url":"interfaces/ICRUDTaskListService.html","title":"interface - ICRUDTaskListService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICRUDTaskListService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/crud-task-list.service.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        addTask\n                                    \n                                \n                                \n                                    \n                                        deleteTask\n                                    \n                                \n                                \n                                    \n                                        getAllTasks\n                                    \n                                \n                                \n                                    \n                                        updateTask\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addTask\n                        \n                    \n                \n            \n            \n                \naddTask(task: Task)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/crud-task-list.service.interface.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                task\n                                            \n                                                            Task\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteTask\n                        \n                    \n                \n            \n            \n                \ndeleteTask(taskId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/crud-task-list.service.interface.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                taskId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllTasks\n                        \n                    \n                \n            \n            \n                \ngetAllTasks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/crud-task-list.service.interface.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         TaskList\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateTask\n                        \n                    \n                \n            \n            \n                \nupdateTask(updatedTask: Task)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/crud-task-list.service.interface.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updatedTask\n                                            \n                                                            Task\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { TaskList } from '../model/task-list.model';\nimport { Task } from '../model/task.model';\n\nexport interface ICRUDTaskListService {\n  getAllTasks(): TaskList;\n  addTask(task: Task): void;\n  updateTask(updatedTask: Task): void;\n  deleteTask(taskId: number): void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainTaskComponent.html":{"url":"components/MainTaskComponent.html","title":"component - MainTaskComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MainTaskComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/tasks/main-task/main-task.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-main-task\n            \n\n\n\n            \n                styleUrls\n                ./main-task.component.css\n            \n\n\n\n            \n                templateUrl\n                ./main-task.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                task\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/tasks/main-task/main-task.component.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        task\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Task\n\n                    \n                \n                    \n                        \n                                Defined in src/tasks/main-task/main-task.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Task, TaskState } from '../../app/model/task.model';\nimport { TaskComponent } from '../task/task.component';\n\n@Component({\n  selector: 'app-main-task',\n  \n  templateUrl: './main-task.component.html',\n  styleUrls: ['./main-task.component.css']\n})\nexport class MainTaskComponent implements OnInit {\n  task!: Task;\n\n  \n\n  ngOnInit(): void {\n   \n    this.task = new Task(\n      'Terminer le projet Angular',\n      'Implémenter toutes les fonctionnalités nécessaires et corriger les bugs.',\n      TaskState.EN_COURS\n    );\n  }\n}\n    \n\n    \n        main-task works!\n\n\n    \n\n    \n                \n                    ./main-task.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'main-task works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'MainTaskComponent', 'selector': 'app-main-task'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TaskListComponent', 'selector': 'app-task-list'}];\n    var DIRECTIVES = [{'name': 'TaskStatusColorDirective', 'selector': '[appTaskStatusColor]'}];\n    var ACTUAL_COMPONENT = {'name': 'MainTaskComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Task.html":{"url":"classes/Task.html","title":"class - Task","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/task.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createdAt\n                            \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                state\n                            \n                            \n                                    Public\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(title: string, description: string, state: TaskState, createdAt: Date)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/task.model.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        description\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        state\n                                                  \n                                                        \n                                                                        TaskState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        createdAt\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Default value : new Date()\n                    \n                \n                    \n                        \n                                Defined in src/app/model/task.model.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/model/task.model.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TaskState\n\n                    \n                \n                    \n                        \n                                Defined in src/app/model/task.model.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/model/task.model.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export enum TaskState {\n    EN_COURS = 'EN_COURS',\n    A_FAIRE = 'A_FAIRE',\n    TERMINEE = 'TERMINEE'\n  }\n  \n  export class Task {\n    constructor(\n      public title: string,\n      public description: string,\n      public state: TaskState,\n      public createdAt: Date = new Date()\n    ) {}\n  }\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TaskComponent.html":{"url":"components/TaskComponent.html","title":"component - TaskComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TaskComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/tasks/task/task.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-task\n            \n\n\n\n            \n                styleUrls\n                ./task.component.css\n            \n\n\n\n            \n                templateUrl\n                ./task.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                task\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/tasks/task/task.component.ts:12\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        task\n                    \n                \n                \n                    \n                        Type :         Task\n\n                    \n                \n                        \n                            \n                                    Defined in src/tasks/task/task.component.ts:12\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/tasks/task/task.component.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { Task, TaskState } from '../../app/model/task.model';\n\n@Component({\n  selector: 'app-task',\n  templateUrl: './task.component.html',\n  styleUrls: ['./task.component.css']\n})\nexport class TaskComponent implements OnInit {\n  @Input() task!: Task;  \n\n  constructor() {}\n\n  ngOnInit(): void {\n    console.log('TaskComponent Initialized with Task:', this.task);\n  }\n}\n\n\n    \n\n    \n        \n\n    {{ task.title }}\n    {{ task.description }}\n    Date de création : {{ task.createdAt | dateFormat }}\n    {{ task.state }}\n  \n    \n\n    \n                \n                    ./task.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ task.title }}    {{ task.description }}    Date de création : {{ task.createdAt | dateFormat }}    {{ task.state }}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'MainTaskComponent', 'selector': 'app-main-task'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TaskListComponent', 'selector': 'app-task-list'}];\n    var DIRECTIVES = [{'name': 'TaskStatusColorDirective', 'selector': '[appTaskStatusColor]'}];\n    var ACTUAL_COMPONENT = {'name': 'TaskComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskList.html":{"url":"classes/TaskList.html","title":"class - TaskList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/task-list.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                tasks\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tasks: Task[])\n                    \n                \n                        \n                            \n                                Defined in src/app/model/task-list.model.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tasks\n                                                  \n                                                        \n                                                                        Task[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        tasks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Task[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/model/task-list.model.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Task } from './task.model';\n\nexport class TaskList {\n  tasks: Task[];\n\n  constructor(tasks: Task[] = []) {\n    this.tasks = tasks;\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TaskListComponent.html":{"url":"components/TaskListComponent.html","title":"component - TaskListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TaskListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/tasks/task-list/task-list.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-task-list\n            \n\n\n\n            \n                styleUrls\n                ./task-list.component.css\n            \n\n\n\n            \n                templateUrl\n                ./task-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                taskList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/tasks/task-list/task-list.component.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        taskList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TaskList\n\n                    \n                \n                    \n                        \n                                Defined in src/tasks/task-list/task-list.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { TaskList } from '../../app/model/task-list.model';\nimport { Task, TaskState } from '../../app/model/task.model';\n\n\n@Component({\n  selector: 'app-task-list',\n  \n  \n  templateUrl: './task-list.component.html',\n  styleUrls: ['./task-list.component.css']\n})\nexport class TaskListComponent implements OnInit {\n  taskList!: TaskList;\n\n  ngOnInit(): void {\n    this.taskList = new TaskList([\n      new Task('Tâche 1', 'Description de la tâche 1', TaskState.A_FAIRE),\n      new Task('Tâche 2', 'Description de la tâche 2', TaskState.EN_COURS),\n      new Task('Tâche 3', 'Description de la tâche 3', TaskState.TERMINEE)\n    ]);\n    console.log('TaskListComponent Initialized with TaskList:', this.taskList);\n  }\n}\n    \n\n    \n        \n\n    \n  \n    \n\n    \n                \n                    ./task-list.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'MainTaskComponent', 'selector': 'app-main-task'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TaskListComponent', 'selector': 'app-task-list'}];\n    var DIRECTIVES = [{'name': 'TaskStatusColorDirective', 'selector': '[appTaskStatusColor]'}];\n    var ACTUAL_COMPONENT = {'name': 'TaskListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TaskStatusColorDirective.html":{"url":"directives/TaskStatusColorDirective.html","title":"directive - TaskStatusColorDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  TaskStatusColorDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/task-status-color.directive.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        OnInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appTaskStatusColor]\n                    \n\n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                updateColor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                appTaskStatusColor\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/task-status-color.directive.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        appTaskStatusColor\n                    \n                \n                \n                    \n                        Type :         TaskState\n\n                    \n                \n                        \n                            \n                                    Defined in src/task-status-color.directive.ts:9\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/task-status-color.directive.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        updateColor\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateColor()\n                \n            \n\n\n                    \n                        \n                            Defined in src/task-status-color.directive.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, Input, OnInit } from '@angular/core';\nimport { TaskState } from '../src/app/model/task.model';\n\n@Directive({\n  selector: '[appTaskStatusColor]',\n})\nexport class TaskStatusColorDirective implements OnInit {\n  @Input() appTaskStatusColor!: TaskState;\n\n  constructor(private el: ElementRef) {}\n\n  ngOnInit() {\n    this.updateColor();\n  }\n\n  private updateColor() {\n    switch (this.appTaskStatusColor) {\n      case TaskState.EN_COURS:\n        this.el.nativeElement.style.color = 'blue';\n        break;\n      case TaskState.A_FAIRE:\n        this.el.nativeElement.style.color = 'red';\n        break;\n      case TaskState.TERMINEE:\n        this.el.nativeElement.style.color = 'green';\n        break;\n      default:\n        this.el.nativeElement.style.color = 'black';\n    }\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TasksModule.html":{"url":"modules/TasksModule.html","title":"module - TasksModule","body":"\n                   \n\n\n\n\n    Modules\n    TasksModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TasksModule\n\n\n\ncluster_TasksModule_declarations\n\n\n\ncluster_TasksModule_imports\n\n\n\n\nDateFormatPipe\n\nDateFormatPipe\n\n\n\nTasksModule\n\nTasksModule\n\nTasksModule -->\n\nDateFormatPipe->TasksModule\n\n\n\n\n\nMainTaskComponent\n\nMainTaskComponent\n\nTasksModule -->\n\nMainTaskComponent->TasksModule\n\n\n\n\n\nTaskComponent\n\nTaskComponent\n\nTasksModule -->\n\nTaskComponent->TasksModule\n\n\n\nTasksModule -->\n\nTaskComponent->TasksModule\n\n\n\n\n\nTaskListComponent\n\nTaskListComponent\n\nTasksModule -->\n\nTaskListComponent->TasksModule\n\n\n\nTasksModule -->\n\nTaskListComponent->TasksModule\n\n\n\n\n\nTaskStatusColorDirective\n\nTaskStatusColorDirective\n\nTasksModule -->\n\nTaskStatusColorDirective->TasksModule\n\n\n\n\n\nTasksRoutingModule\n\nTasksRoutingModule\n\nTasksModule -->\n\nTasksRoutingModule->TasksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/tasks/tasks.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DateFormatPipe\n                        \n                        \n                            MainTaskComponent\n                        \n                        \n                            TaskComponent\n                        \n                        \n                            TaskComponent\n                        \n                        \n                            TaskListComponent\n                        \n                        \n                            TaskListComponent\n                        \n                        \n                            TaskStatusColorDirective\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            TasksRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TasksRoutingModule } from './tasks-routing.module';\n\n\nimport { TaskListComponent } from './task-list/task-list.component';\nimport { TaskComponent } from './task/task.component';\nimport { AppComponent } from '../app/app.component';\nimport { TaskStatusColorDirective } from '../task-status-color.directive';\nimport { DateFormatPipe } from '../date-format.pipe';\nimport { MainTaskComponent } from './main-task/main-task.component';\nimport { RouterModule } from '@angular/router';\n\n\n\n\n@NgModule({\n  declarations: [TaskListComponent,TaskComponent,TaskListComponent,TaskComponent,TaskStatusColorDirective,DateFormatPipe,MainTaskComponent],\n  imports: [\n    CommonModule,\n    TasksRoutingModule\n  ]\n})\nexport class TasksModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TasksRoutingModule.html":{"url":"modules/TasksRoutingModule.html","title":"module - TasksRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    TasksRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/tasks/tasks-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TaskListComponent } from './task-list/task-list.component';\n\nconst routes: Routes = [\n  { path: '', component: TaskListComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class TasksRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/app.config.server.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.config.server.ts\n            \n            variable\n            serverConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/model/task-list.model.ts\n            \n            class\n            TaskList\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/model/task.model.ts\n            \n            class\n            Task\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/service/bystatut-task-list.service.interface.ts\n            \n            interface\n            IByStatutTaskListService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/service/crud-task-list.service.interface.ts\n            \n            interface\n            ICRUDTaskListService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/service/crud-task-list.service.ts\n            \n            injectable\n            CRUDTaskListService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/date-format.pipe.ts\n            \n            pipe\n            DateFormatPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.server.ts\n            \n            variable\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/task-status-color.directive.ts\n            \n            directive\n            TaskStatusColorDirective\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/tasks/main-task/main-task.component.ts\n            \n            component\n            MainTaskComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/tasks/task-list/task-list.component.ts\n            \n            component\n            TaskListComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/tasks/task/task.component.ts\n            \n            component\n            TaskComponent\n            \n                0 %\n                (0/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^18.2.0\n        \n            @angular/common : ^18.2.0\n        \n            @angular/compiler : ^18.2.0\n        \n            @angular/core : ^18.2.0\n        \n            @angular/forms : ^18.2.0\n        \n            @angular/platform-browser : ^18.2.0\n        \n            @angular/platform-browser-dynamic : ^18.2.0\n        \n            @angular/platform-server : ^18.2.0\n        \n            @angular/router : ^18.2.0\n        \n            @angular/ssr : ^18.2.2\n        \n            @compodoc/compodoc : ^1.1.25\n        \n            express : ^4.18.2\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.10\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            TaskState   (src/.../task.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/model/task.model.ts\n    \n        \n            \n                \n                    \n                        \n                        TaskState\n                    \n                \n                        \n                            \n                                 EN_COURS\n                            \n                        \n                        \n                            \n                                Value : EN_COURS\n                            \n                        \n                        \n                            \n                                 A_FAIRE\n                            \n                        \n                        \n                            \n                                Value : A_FAIRE\n                            \n                        \n                        \n                            \n                                 TERMINEE\n                            \n                        \n                        \n                            \n                                Value : TERMINEE\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nLes versions des outils utilisés (ng --version)\nAngular CLI: 18.2.2\nNode: 20.15.1\nPackage Manager: npm 10.7.0\nOS: win32 x64\n#Lancer votre application \nng serve\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        TasksModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TasksRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TasksModule\n\n\n\ncluster_TasksModule_declarations\n\n\n\ncluster_TasksModule_imports\n\n\n\n\nDateFormatPipe\n\nDateFormatPipe\n\n\n\nTasksModule\n\nTasksModule\n\nTasksModule -->\n\nDateFormatPipe->TasksModule\n\n\n\n\n\nMainTaskComponent\n\nMainTaskComponent\n\nTasksModule -->\n\nMainTaskComponent->TasksModule\n\n\n\n\n\nTaskComponent\n\nTaskComponent\n\nTasksModule -->\n\nTaskComponent->TasksModule\n\n\n\nTasksModule -->\n\nTaskComponent->TasksModule\n\n\n\n\n\nTaskListComponent\n\nTaskListComponent\n\nTasksModule -->\n\nTaskListComponent->TasksModule\n\n\n\nTasksModule -->\n\nTaskListComponent->TasksModule\n\n\n\n\n\nTaskStatusColorDirective\n\nTaskStatusColorDirective\n\nTasksModule -->\n\nTaskStatusColorDirective->TasksModule\n\n\n\n\n\nTasksRoutingModule\n\nTasksRoutingModule\n\nTasksModule -->\n\nTasksRoutingModule->TasksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            bootstrap   (src/.../main.server.ts)\n                        \n                        \n                            config   (src/.../app.config.server.ts)\n                        \n                        \n                            serverConfig   (src/.../app.config.server.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [provideZoneChangeDetection({ eventCoalescing: true }), provideRouter(routes), provideClientHydration()]\n}\n                    \n                \n\n\n        \n    \n\n    src/main.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => bootstrapApplication(AppComponent, config)\n                    \n                \n\n\n        \n    \n\n    src/app/app.config.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : mergeApplicationConfig(appConfig, serverConfig)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideServerRendering()\n  ]\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
